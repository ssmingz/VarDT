bug_id;file#var_list
1:/src/main/java/org/apache/commons/math3/fraction/BigFraction#epsilon-[269,310];q1-[290,333];maxDenominator-[269,328]:/src/main/java/org/apache/commons/math3/fraction/Fraction#epsilon-[178,219];q1-[198,240];maxDenominator-[178,235]
2:/src/main/java/org/apache/commons/math3/distribution/HypergeometricDistribution#(double)(getSampleSize()*getNumberOfSuccesses())/(double)getPopulationSize()-[268]
3:/src/main/java/org/apache/commons/math3/util/MathArrays#len-[816,866]
4:/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/SubLine#v1D-[113,124]:/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/SubLine#v2D-[117,128]
5:/src/main/java/org/apache/commons/math3/complex/Complex#(real==0.0&&imaginary==0.0)-[304];(real==0.0)-[304];(imaginary==0.0)-[304];real-[304,318];imaginary-[304,318]
6:/src/main/java/org/apache/commons/math3/optim/BaseOptimizer#iterations-[51]:/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/gradient/NonLinearConjugateGradientOptimizer#iter-[214,277]:/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/CMAESOptimizer#incrementIterationCount()找不到:/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/PowellOptimizer#iter-[191,227]:/src/main/java/org/apache/commons/math3/optim/nonlinear/scalar/noderiv/SimplexOptimizer#iteration-[155,175]:/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/GaussNewtonOptimizer#iter-[106,160]:/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/LevenbergMarquardtOptimizer#iter-[322,489]
7:/src/main/java/org/apache/commons/math3/ode/AbstractIntegrator#eventT-[337,378];eventY-[343,371];remaining-[357,358];needReset-[363,364];remaining-[370,371];currentEvent-[333,384];isLastStep-[347,394];needReset-[363,364]
8:/src/main/java/org/apache/commons/math3/distribution/DiscreteDistribution#out-[187,190]
9:/src/main/java/org/apache/commons/math3/geometry/euclidean/threed/Line#reverted-[87,88]
10:/src/main/java/org/apache/commons/math3/analysis/differentiation/DSCompiler#result-[1413]
11:/src/main/java/org/apache/commons/math3/distribution/MultivariateNormalDistribution#(FastMath.pow(2*FastMath.PI,-dim/2)*FastMath.pow(covarianceMatrixDeterminant,-0.5)*getExponentTerm(vals))-[183];dim-[178,183]
12:/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator#
13:/src/main/java/org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer#m-[561,562]
14:/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/Weight#weightMatrix-[43,45];weight-[41,45]:/src/main/java/org/apache/commons/math3/optim/nonlinear/vector/jacobian/AbstractLeastSquaresOptimizer#m-[266,267]
15:/src/main/java/org/apache/commons/math3/util/FastMath#(y>=TWO_POWER_52||y<=-TWO_POWER_52)-[1541];(y>=TWO_POWER_52)-[1541];(y<=-TWO_POWER_52)-[1541];y-[1441,1564]
16:/src/main/java/org/apache/commons/math3/util/FastMath#(x>20)-[393];(x<-20)-[397];x-[383,404];(x>20)-[454];(x<-20)-[458];x-[443,468]
17:/src/main/java/org/apache/commons/math3/dfp/Dfp#x-[1602,1603]
18:/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer#res-[929,934];res-[955,960];(x[i]<0)-[992];(x[i]<1.0)-[995];x-[985,995]
19:/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer#boundaries-[536,543];uB-[507,537]
20:/src/main/java/org/apache/commons/math3/optimization/direct/CMAESOptimizer#(decode(x))-[921];x-[920,921]
21:/src/main/java/org/apache/commons/math3/linear/RectangularCholeskyDecomposition#swap-[69,93];c-[128,133]
22:/src/main/java/org/apache/commons/math3/distribution/FDistribution#true-[275]:/src/main/java/org/apache/commons/math3/distribution/UniformRealDistribution#false-[184]
23:/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer#(checker.converged(iter,previous,current))-[236];current-[233,275];isMinim-[116,277];previous-[232,276];iter-[152,279];best(current,previous,isMinim)-[237];best(current,previous,isMinim)-[274,275]
24:/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer#(checker.converged(iter,previous,current))-[229];checker-[116,229];iter-[145,269];previous-[225,229];current-[226,267]
25:/src/main/java/org/apache/commons/math3/optimization/fitting/HarmonicFitter#c2-[298,327]
26:/src/main/java/org/apache/commons/math3/fraction/Fraction#(a0>overflow)-[181];a0-[180,187];((p2>overflow)||(q2>overflow))-[209];(p2>overflow)-[209];(q2>overflow)-[209]
27:/src/main/java/org/apache/commons/math3/fraction/Fraction#(multiply(100).doubleValue())-[597]
28:/src/main/java/org/apache/commons/math3/optimization/linear/SimplexSolver#tableau-[90,143];minRow-[138.151]
29:/src/main/java/org/apache/commons/math3/linear/OpenMapRealVector#iter-[349,352];res-[343,354];res-[361,374];v-[359,360]
30:/src/main/java/org/apache/commons/math3/stat/inference/MannWhitneyUTest#n1n2prod-[173,177]
31:/src/main/java/org/apache/commons/math3/util/ContinuedFraction#p0-[134,187];q1-[135,189];cN-[143,160];q2-[144,161];(Double.isInfinite(cN)||Double.isInfinite(q2))-[145];(Double.isInfinite(cN))-[145];(Double.isInfinite(q2))-[145];(scale<=0)-[150];deltaN-[169,181];hN-[170,198];dPrev-[185];cPrev-[186];hPrev-[188]
32:/src/main/java/org/apache/commons/math3/geometry/euclidean/twod/PolygonsSet#((Boolean)tree.getAttribute())-[136];tree-[135,136]
33:/src/main/java/org/apache/commons/math3/optimization/linear/SimplexTableau#(Precision.compareTo(entry,0d,maxUlps)>0)-[338];maxUlps-[338]
34:/src/main/java/org/apache/commons/math3/genetics/ListPopulation#(chromosomes.iterator())-[209];chromosomes-[209]
35:/src/main/java/org/apache/commons/math3/genetics/ElitisticListPopulation#this.elitismRate-[51];this.elitismRate-[65]
36:/src/main/java/org/apache/commons/math/fraction/BigFraction#result-[685,688];result-[732,735]
37:/src/main/java/org/apache/commons/math/complex/Complex#isNaN-[1018];real-[1022];imaginary-[1023];isNaN-[1063];real-[1066];imaginary-[1067]
38:/src/main/java/org/apache/commons/math/optimization/direct/BOBYQAOptimizer#(ipt>n)-[1656];ipt-[1655,1656];n-[1586,1736];iptMinus1-[1662,1664];jptMinus1-[1663,1665];(numEval<=2*n+1)-[1701];numEval-[1685,1712]
39:/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator#forward-[196,313]
40:/src/main/java/org/apache/commons/math/analysis/solvers/BracketingNthOrderBrentSolver#targetY-[235,241]
41:/src/main/java/org/apache/commons/math/stat/descriptive/moment/Variance#i-[520];(i<weights.length)-[520]
42:/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau#(basicRows.contains(basicRow))-[413];basicRow-[409,419]
43:/src/main/java/org/apache/commons/math/stat/descriptive/SummaryStatistics#(!(meanImpl instanceof Mean))-[158];(!(varianceImpl instanceof Variance))-[161];(!(geoMeanImpl instanceof GeometricMean))-[164];meanImpl-[158,159];varianceImpl-[161,162];geoMeanImpl-[164,165]
44:/src/main/java/org/apache/commons/math/ode/AbstractIntegrator#eventT-[316,348];eventY-[322,340];resetOccurred-[280,342]
45:/src/main/java/org/apache/commons/math/linear/OpenMapRealMatrix#rowDimension-[48,50];columnDimension-[48,51]
46:/src/main/java/org/apache/commons/math/complex/Complex#(divisor.isZero)-[258];(isZero?NaN:INF)-[260];isZero-[260];INF-[260];(divisor=0d)-[295];divisor-[291,302];isZero-[297];INF-[297]
47:/src/main/java/org/apache/commons/math/complex/Complex#(divisor.getReal()==0.0&&divisor.getImaginary()==0.0)-[256];(divisor.getReal()==0.0)-[256];(divisor.getImaginary()==0.0)-[256];divisor-[249,265];divisor.getReal()-[256,264];divisor.getImaginary()-[256,265];(divisor==0d)-[292];(NaN)-[93]
48:/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver#x-[161,196];x1-[132,196]
49:/src/main/java/org/apache/commons/math/linear/OpenMapRealVector#iter-[345,348];iter-[358,361];iter-[370,373];iter-[383,386];
50:/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver#x-[160,198];x1-[131,198];x0-[130,188];f0-[183,189]
51:/src/main/java/org/apache/commons/math/analysis/solvers/BaseSecantSolver#method-[178];x-[160,192];x1-[131,192];x0-[130,241];f0-[132,183]
52:/src/main/java/org/apache/commons/math/geometry/euclidean/threed/Rotation#(c==0)-[344];(c==0)-[353];(c==0)-[359];c-[343,359]
53:/src/main/java/org/apache/commons/math/complex/Complex#rhs-[150,153];(createComplex(real+rhs.getReal(),imaginary+rhs.getImaginary()))-[153];
54:/src/main/java/org/apache/commons/math/dfp/Dfp#bits-[265,305];(lessThan(getZero()))-[2319]
55:/src/main/java/org/apache/commons/math/geometry/Vector3D#(new Vector3D(v1.y*v2.z-v1.z*v2.y,v1.z*v2.x-v1.x*v2.z,v1.x*v2.y-v1.y*v2.x))-[473];v1-[457,473];v2-[457,473]
56:/src/main/java/org/apache/commons/math/util/MultidimensionalCounter#idx-[237,243];(count<index)-[238];count-[233,239];index-[216,238];indices-[234,243]
57:/src/main/java/org/apache/commons/math/stat/clustering/KMeansPlusPlusClusterer#sum-[175,180]
58:/src/main/java/org/apache/commons/math/optimization/fitting/GaussianFitter#(fit(new Gaussian.Parametric(),guess))-[121]
59:/src/main/java/org/apache/commons/math/util/FastMath#((a<=b)?b:(Float.isNaN(a+b)?Float.NaN:b))-[3482];a-[3481,3482];b-[3481,3482]
60:/src/main/java/org/apache/commons/math/distribution/NormalDistributionImpl#dev-[125,127];standardDeviation-[127,132];(x<(mean-20*standardDeviation))-[130];x-[124,132];mean-[125,132];(x>(mean+20*standardDeviation))-[132]
61:/src/main/java/org/apache/commons/math/distribution/PoissonDistributionImpl#(p<=0)-[93];p-[92,97]
62:/src/main/java/org/apache/commons/math/optimization/univariate/MultiStartUnivariateRealOptimizer#(optimize(f, goal, min, max, 0))-[146];bound1-[160,162];bound2-[161,162];optima-[162,166]
63:/src/main/java/org/apache/commons/math/util/MathUtils#((Double.isNaN(x)&&Double.isNaN(y))||x==y)-[417];x-[416,417];y-[416,417]
64:/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer#rows-[245,257];residuals-[278,342];sum-[316,318];current-[268,444];objective-[268,365];tmpVec-[341,433];oldRes-[343,433];(checker.converged(getIterations(),previous,current))-[443];previous-[273,443];checker-[435,443]
65:/src/main/java/org/apache/commons/math/optimization/general/AbstractLeastSquaresOptimizer#(Math.sqrt(criterion/rows))-[245];rows-[241,245];criterion-[240,245];residual-[242,243];chiSquare-[255,258]
66:/src/main/java/org/apache/commons/math/optimization/univariate/BrentOptimizer#(localMin(getGoalType()==GoalType.MINIMIZE,f,goalType,min,startValue,max,getRelativeAccuracy(),getAbsoluteAccuracy()))-[61];f-[59,61];max-[59,61];startValue-[59,61];min-[59,61];goalType-[59,61];(optimize(f,goalType,min,max,min+GOLDEN_SECTION*(max-min)))-[66];f-[65,66];max-[65,66];min-[65,66];goalType-[65,66];fx-[119,121];(goalType==GoalType.MAXIMIZE)-[120];goalType-[93,238];(count<maximalIterationCount)-[127];count-[126,241];maximalIterationCount-[127,243];fu-[200,202];(goalType==GoalType.MAXIMIZE)-[201];((goalType==GoalType.MAXIMIZE)?-fx:fx)-[238];fx-[121,238]
67:/src/main/java/org/apache/commons/math/optimization/MultiStartUnivariateRealOptimizer#(optimizer.getFunctionValue())-[92];(optimizer.getResult())-[97]
68:/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer#(new VectorialPointValuePair(point,objective))-[303]
69:/src/main/java/org/apache/commons/math/stat/correlation/PearsonsCorrelation#out-[163,171]
70:/src/main/java/org/apache/commons/math/analysis/solvers/BisectionSolver#(solve(min,max))-[72]
71:/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator#interpolator-[215,329];stepStart-[222,321];yTmp-[283,322];y-[205,338];y0-[192,335];hNew-[255,315];stepSize-[260,348]:/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator#stepSize-[129,183];interpolator-[121,200];stepStart-[128,202];yTmp-[167,193];y-[108,207];y0-[95,193]
72:/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver#yMin-[113,142];yMax-[125,142];(Math.abs(yMin)<=functionValueAccuracy)-[114];(Math.abs(yMax)<=functionValueAccuracy)-[126]
73:/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver#yMin-[113,138];yMax-[125,138]
74:/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator#scale-[247,252]
75:/src/main/java/org/apache/commons/math/stat/Frequency#(getCumPct((Comparable<?>)v))-[303];v-[302,303]
76:/src/main/java/org/apache/commons/math/linear/SingularValueDecompositionImpl#e-[161,188];n-[159];m-[159,181];n-[239,265];m-[239];e-[247,249];(i<p-1)-[166];(i<p-1)-[252];p-[158,188];p-[238,266];wi-[174];wi-[259];wData-[178,182];wData-[263,266]
77:/src/main/java/org/apache/commons/math/linear/ArrayRealVector#max-[721,723]:/src/main/java/org/apache/commons/math/linear/OpenMapRealVector#max-[499,505];iter-[500,503]
78:/src/main/java/org/apache/commons/math/ode/events/EventState#gb-[185,243];ga-[178,243];ta-[177,222];interpolator-[167,207]
79:/src/main/java/org/apache/commons/math/util/MathUtils#sum-[1624,1627];dp-[1626,1627]
80:/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl#j-[1135,1142]
81:/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl#upperSpectra-[575,593];(i<4*n0-11)-[905];n0-[893,921];((work[i+3]<=TOLERANCE_2*work[i])&&(work[i+2]<=TOLERANCE_2*sigma))-[906];(work[i+3]<=TOLERANCE_2*work[i])-[906];(work[i+2]<=TOLERANCE_2*sigma)-[906];TOLERANCE_2-[906];sigma-[859,909];work-[880,909];(end-start>2)-[1543];end-[1430,1641];start-[1430,1641]
82:/src/main/java/org/apache/commons/math/optimization/linear/SimplexSolver#(MathUtils.compareTo(entry,0,epsilon)>0)-[82];entry-[81,83]
83:/src/main/java/org/apache/commons/math/optimization/linear/SimplexTableau#start-[292,293];negativeVarBasicRow-[341,342];basicRow-[345,352]
84:/src/main/java/org/apache/commons/math/optimization/direct/MultiDirectional#(comparator.compare(contracted,best)<0)-[90];contracted-[89,90];best-[70,90]
85:/src/java/org/apache/commons/math/analysis/solvers/UnivariateRealSolverUtils#(fa*fb>=0.0)-[198];fa-[191,204];fb-[193,204]
86:/src/java/org/apache/commons/math/linear/CholeskyDecompositionImpl#(lTData[i][i]<absolutePositivityThreshold)-[114];lTData-[105,143];absolutePositivityThreshold-[93,114];ltI-[134,138]
87:/src/java/org/apache/commons/math/optimization/linear/SimplexTableau#(!MathUtils.equals(getEntry(i,col),0.0,epsilon))-[275];(row==null)-[276];row-[273,277]
88:/src/java/org/apache/commons/math/optimization/linear/SimplexTableau#coefficients-[325,333];(basicRow!=null)-[336];basicRow-[330,338]
89:/src/java/org/apache/commons/math/stat/Frequency#v-[109,110]
90:/src/java/org/apache/commons/math/stat/Frequency#v-[109,123]
91:/src/java/org/apache/commons/math/fraction/Fraction#nOd-[259,261];dOn-[260,261]
92:/src/java/org/apache/commons/math/util/MathUtils#result-[184,208];(result==Long.MAX_VALUE)-[185];k-[169,184];n-[169,184];Math.floor(Math.exp(binomialCoefficientLog(n,k))+0.5)-[236];k-[233,236];n-[233,236];k-[257,294];n-[257,294]
93:/src/java/org/apache/commons/math/util/MathUtils#(result==Long.MAX_VALUE)-[346];result-[345,346];n-[344,350];n-[373,377];n-[393,398]
94:/src/java/org/apache/commons/math/util/MathUtils#(u*v==0)-[412];u-[411,421];v-[411,424]
95:/src/java/org/apache/commons/math/distribution/FDistributionImpl#ret-[144,147];d-[145,147]
96:/src/java/org/apache/commons/math/complex/Complex#ret-[258,266]
97:/src/java/org/apache/commons/math/analysis/BrentSolver#(sign>=0)-[138];yMin-[133,147];yMax-[134,147]
98:/src/java/org/apache/commons/math/linear/BigMatrixImpl#out-[710,712]:/src/java/org/apache/commons/math/linear/RealMatrixImpl#out-[779,786]
99:/src/java/org/apache/commons/math/util/MathUtils#u-[540,551];v-[541,555];lcm-[713,714]
100:/src/java/org/apache/commons/math/estimation/AbstractEstimator#cols-[166,172];p-[202,208];errors-[207,211]
101:/src/java/org/apache/commons/math/complex/ComplexFormat#(source.substring(startIndex,endIndex).compareTo(getImaginaryCharacter())!=0)-[377];endIndex-[376,386];startIndex-[375,383];source-[320,377]
102:/src/java/org/apache/commons/math/stat/inference/ChiSquareTestImpl#sumSq-[74,78];dev-[75,77]
103:/src/java/org/apache/commons/math/distribution/NormalDistributionImpl#x-[108,109];mean-[109];standardDeviation-[109];(0.5*(1.0+Erf.erf((x-mean)/(standardDeviation*Math.sqrt(2.0)))))-[109]
104:/src/java/org/apache/commons/math/special/Gamma#x-[108,109];mean-[109];standardDeviation-[109]
105:/src/java/org/apache/commons/math/stat/regression/SimpleRegression#(sumYY-sumXY*sumXY/sumXX)-[264];sumYY-[264];sumXY-[264];sumXX-[264]
106:/src/java/org/apache/commons/math/fraction/ProperFractionFormat#num-[156,203];den-[191,204]



